{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCGlDC,EAAU,SAACC,GAAS,OAAKC,OAAOC,IAAAA,WAAeC,MAAM,uCAAuCH,GAAK,EACjGI,EAAQ,SAACJ,GAAS,OAAKE,IAAAA,WAAeC,MAAM,mDAAmDH,EAAI,EACnGK,EAAO,SAACL,GAAS,OAAKE,IAAAA,WAAeC,MAAM,kDAAkDH,EAAI,EAGvGE,IAAAA,aAAiBI,IAAI,0BAA0B,SAAUJ,GACrDA,EAAIK,cAAa,IACR,0BACJC,gBACG,CACIT,QAASA,EAAQ,YACjBK,MAAOA,EAAM,YACbC,KAAMA,EAAK,YACXI,KAAM,QAEV,MAEHD,gBACG,CACIT,QAASA,EAAQ,aACjBK,MAAOA,EAAM,aACbC,KAAMA,EAAK,aACXI,KAAM,QAEV,KAGHD,gBACG,CACIT,QAASA,EAAQ,UACjBK,MAAOA,EAAM,UACbC,KAAMA,EAAK,UACXI,KAAM,SACNC,QAAS,CACL,aAAcN,EAAM,2BACpB,aAAcA,EAAM,2BACpB,eAAgBA,EAAM,6BACtB,eAAgBA,EAAM,6BACtB,aAAcA,EAAM,2BACpB,cAAeA,EAAM,4BACrB,WAAYA,EAAM,yBAClB,eAAgBA,EAAM,6BACtB,mBAAoBA,EAAM,kCAE9BO,QAAS,cAEb,KAGHH,gBACG,CACIT,QAASA,EAAQ,SACjBK,MAAOA,EAAM,SACbC,KAAMA,EAAK,SACXI,KAAM,QAEV,KAEHD,gBACG,CACIT,QAASA,EAAQ,UACjBK,MAAOA,EAAM,UACbC,KAAMA,EAAK,UACXI,KAAM,QAEV,KAGHD,gBACG,CACIT,QAASA,EAAQ,UACjBK,MAAOA,EAAM,UACbC,KAAMA,EAAK,UACXI,KAAM,QAEV,KAGHD,gBACG,CACIT,QAASA,EAAQ,YACjBK,MAAOA,EAAM,YACbK,KAAM,SACNC,QAAS,CACT,UAAaN,EAAM,0BACnB,WAAcA,EAAM,4BAEpBO,QAAS,MAEb,KAGHH,gBACG,CACIT,QAASA,EAAQ,gCACjBK,MAAOA,EAAM,gCACbC,KAAMA,EAAK,gCACXI,KAAM,QAEV,KAEHD,gBACG,CACIT,QAASA,EAAQ,oCACjBK,MAAOA,EAAM,oCACbC,KAAMA,EAAK,oCACXI,KAAM,QAEd,KAECD,gBACG,CACIT,QAASA,EAAQ,+BACjBK,MAAOA,EAAM,+BACbC,KAAMA,EAAK,+BACXI,KAAM,QAEb,IAET,G","sources":["webpack://gbcl-fof-upload-qcloud/webpack/bootstrap","webpack://gbcl-fof-upload-qcloud/webpack/runtime/compat get default export","webpack://gbcl-fof-upload-qcloud/webpack/runtime/define property getters","webpack://gbcl-fof-upload-qcloud/webpack/runtime/hasOwnProperty shorthand","webpack://gbcl-fof-upload-qcloud/external root \"flarum.core.compat['admin/app']\"","webpack://gbcl-fof-upload-qcloud/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","import AdminApplication from 'flarum/admin/AdminApplication';\nimport app from 'flarum/admin/app'\n\nconst setting = (s: string) => String(app.translator.trans(`gbcl-fof-upload-qcloud.qcloudConfig.${s}`))\nconst label = (s: string) => app.translator.trans(`gbcl-fof-upload-qcloud.admin.labels.qcloudLabel.${s}`)\nconst help = (s: string) => app.translator.trans(`gbcl-fof-upload-qcloud.admin.labels.qcloudHelp.${s}`)\n\n\napp.initializers.add('gbcl-fof-upload-qcloud', function (app: AdminApplication) {\n    app.extensionData\n        .for('gbcl-fof-upload-qcloud')\n        .registerSetting(\n            {\n                setting: setting('secretId'),\n                label: label('secretId'),\n                help: help('secretId'),\n                type: 'text',\n            },\n            1010\n        )\n        .registerSetting(\n            {\n                setting: setting('secretKey'),\n                label: label('secretKey'),\n                help: help('secretKey'),\n                type: 'text',\n            },\n            1000\n        )\n\n        .registerSetting(\n            {\n                setting: setting('region'),\n                label: label('region'),\n                help: help('region'),\n                type: 'select',\n                options: {\n                    'ap-beijing': label('regionOption.ap-beijing'),\n                    'ap-chengdu': label('regionOption.ap-chengdu'),\n                    'ap-chongqing': label('regionOption.ap-chongqing'),\n                    'ap-guangzhou': label('regionOption.ap-guangzhou'),\n                    'ap-nanjing': label('regionOption.ap-nanjing'),\n                    'ap-shanghai': label('regionOption.ap-shanghai'),\n                    'ap-tokyo': label('regionOption.ap-tokyo'),\n                    'eu-frankfurt': label('regionOption.eu-frankfurt'),\n                    'na-siliconvalley': label('regionOption.na-siliconvalley'),\n                },\n                default: 'ap-beijing',\n            },\n            550\n        )\n\n        .registerSetting(\n            {\n                setting: setting('appId'),\n                label: label('appId'),\n                help: help('appId'),\n                type: 'text',\n            },\n            540\n        )\n        .registerSetting(\n            {\n                setting: setting('domain'),\n                label: label('domain'),\n                help: help('domain'),\n                type: 'text',\n            },\n            530\n        )\n\n        .registerSetting(\n            {\n                setting: setting('bucket'),\n                label: label('bucket'),\n                help: help('bucket'),\n                type: 'text',\n            },\n            510\n        )\n\n        .registerSetting(\n            {\n                setting: setting('useHttps'),\n                label: label('useHttps'),\n                type: 'select',\n                options: {\n                'enableTls': label('schemeOption.enableTls'),\n                'disableTls': label('schemeOption.disableTls'),\n                },\n                default: 'No',\n            },\n            500\n        )\n\n        .registerSetting(\n            {\n                setting: setting('fileRetrievingSignatureToken'),\n                label: label('fileRetrievingSignatureToken'),\n                help: help('fileRetrievingSignatureToken'),\n                type: 'text',\n            },\n            400\n        )\n        .registerSetting(\n            {\n                setting: setting('fileRetrievingSignatureTokenName'),\n                label: label('fileRetrievingSignatureTokenName'),\n                help: help('fileRetrievingSignatureTokenName'),\n                type: 'text',\n        },\n        300\n      )\n        .registerSetting(\n            {\n                setting: setting('fileRetrievingSignatureTime'),\n                label: label('fileRetrievingSignatureTime'),\n                help: help('fileRetrievingSignatureTime'),\n                type: 'text',\n        },\n         200\n      )\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","setting","s","String","app","trans","label","help","add","extensionData","registerSetting","type","options","default"],"sourceRoot":""}